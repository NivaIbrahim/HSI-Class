---
title: "HSI reflectance value Extraction"
format: html
editor: visual
date: 4/18/2025
---

```{r}
library(randomForest)
library(raster)
library(sf)
library(dplyr)
library(terra)

library(ggplot2)

```

Preprocessing In **Spectral View** software we performed: -Radiation correction -Reflectance correction -Orthorectification -Orthomosaic After getting the orthorectified Orthomosaic image **QGIS** is used to transfer the image into .tif file. That is a stack raster with all the bands (272).

After that the field is cropped according to the field boundary to remove any extra vegetation layer.

#Reading the Hyperspectral file

```{r}
library(stars)
HSI_raw<- 

HSI_raw
```

```{r}
library(terra)
HSI_raw<- rast

HSI_raw
```

We are interested in only the reflectance coming from the peanut plants. Lets explore how the reflectance changes before and after removing the soil pixels.

Soil Segmentation using NDVI values.

# Read the Segmented HSI after removing the soil pixels from the plant pixels.

```{r}
HSI_Seg <- 

HSI_Seg
```

The Reflectance values decreased a little.

# Exploring different Bands

## Red Band

```{r}
Red_Band <-  #Assuming band 114 is Red (650 nm)
  
#summary(Red_Band) # takes time
Red_Band
```

Min. 0.000000e+00 1st Qu. 1.142235e-02 Median 1.432904e-02 3rd Qu. 1.946836e-02 Max. 4.034332e-02 NA's 2.695212e+07

##NIR Band

```{r}
NIR_Band <- raster(HSI_Seg$Band_240)  #Assuming band 240 is NIR (930 nm)

plot(NIR_Band) # quicker than ggplot
NIR_Band
```

# Calculate NDVI

```{r}

NDVI <- (NIR_Band - Red_Band) / (NIR_Band + Red_Band)
NDVI
plot(NDVI)

#Save the NDVI raster to a file
...
```

Plot the NDVI. It will take some time.

```{r}
# Convert NDVI raster to data frame for ggplot
NDVI_df <- as.data.frame(NDVI, xy = TRUE)

# Rename the value column
colnames(NDVI_df)[3] <- "NDVI"

# Plot using ggplot2
ggplot(NDVI_df, aes(x = x, y = y, fill = ...)) +
  geom_... +
  scale_fill_viridis_c(option = "D", na.value = "transparent", limits = c(-1, 1)) + #values: -1, 0.976765  (min, max)

  labs(title = "NDVI Map", fill = "NDVI") +
  theme(plot.title = element_text(hjust = 0.5),
    legend.title.align = 0.5 )
  theme_minimal()

```

The whole field is divided into plots and the **ground sample** was collected at random basis around the sampling points from the **center of the plot**. Therefore, a 10m buffer is created around the sampling points and The reflectance value we will be working from that place. -read the sampling points -Transfer the coordinate from wgs to UTM -Make a 10m buffer -Turn the coordinate into wgs again!

```{r}
sampling_pts <-st_read

sampling_pts 
```

```{r}
plot_buffer<- ...("../data/Plots/Taft7_Sampling_Points.shp") %>%
  
  #transfer into UTM17
  
   #buffer by 10m
  
  #transfer in wgs

plot_buffer

plot(plot_buffer)


st_write() #write_sf
```

TO work with rast, the sf object should be transferred into vector.

```{r}
circle <- vect(plot_buffer)
circle
```

# Extraction of Reflectance value as an average of the plot.

For analysis, the reflectance values would be collected as plot average.

```{r}
avg_spectra <- 
avg_spectra
```

```{r}
# Ensure the length of the sequence matches the number of rows in the data frame
avg_spectra$ID <- 701:
avg_spectra<- avg_spectra %>%
  rename(Plot= ID) 
```

```{r}

afl<- 
afl

```

```{r}
# rename the columns
afl_clean <- afl %>%
  (Plot= Plot., afl_0809 = X8.9.2023)
afl_clean
```

```{r}
afl_spectra<- 
 
  
afl_spectra



write.csv(afl_spectra,"../output/Spec_Afl.csv") 

```

We learnt:

- workflow of Headwall HSI
-Segmentation process 
-Single Band Extraction 
-Vegetation Indices Calculation 
-Reflectance Values Extraction
-   
